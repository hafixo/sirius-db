#
# Made with all the love in the world
# by scireum in Remshalden, Germany
#
# Copyright by scireum GmbH
# http://www.scireum.de - info@scireum.de
#

# Adding the db module to the list of known modules...
product {
    modules {
        sirius-db {
            version = "${project.version}"
            build = "${build.number}"
            date = "${timestamp}"
            vcs = "${build.vcs.number}"
        }
    }
}

# Configures the system health monitoring
health {

    # Defines limits for the database / JDBC layer
    limits {

        # JDBC query duration
        db-query-duration.gray = 10
        db-query-duration.warn = 500
        db-query-duration.error = 0

        # JDBC connection pool utilization
        db-uses.gray = 25
        db-uses.warn = 0
        db-uses.error = 0

        # JDBC queries
        db-queries.gray = 25
        db-queries.warn = 0
        db-queries.error = 0

    }
}

# Defines database connectivity settings
jdbc {

    # A profile provides a template for database connections.
    # Each value of the profile serves as backup or default value for the one in the database secion.
    # Also a profile value can reference properties defined in one of both sections like this: ${name}.
    # The url property of the mysql profile (below) is an example.
    profile {
        # The default profile only declares connection management properties. These can be overridden in the
        # actual database section.
        default {
            # Number of connections initially opened
            initialSize = 0

            # Maximal number of open connections
            maxActive = 10

            # Maximal number of open unused connections
            maxIdle = 1

            # Validation query used to determine the fitness of a connection
            validationQuery = ""
        }

        # The mysql profile declares common settings to connect to a MySQL database.
        # As the url is auto generated, only the host and the database name need to be defined. By default 'host'
        # will be 'localhost'.
        mysql {
            driver = "com.mysql.jdbc.Driver"
            url = "jdbc:mysql://${host}:${port}/${database}?autoReconnect=true"
            host = "localhost"
            port = "3306"
            validationQuery = "SELECT 1"
        }

        # The hsqldb profile declares common settings to connect to a HyperSQL database.
        # As the url is auto generated using the db name as file name within data/db, no further settings are required.
        hsqldb {
            driver = "org.hsqldb.jdbc.JDBCDriver"
            url = "jdbc:hsqldb:file:data/db/${id}"
            user = "SA"
            password = ""
            validationQuery = "SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS"
        }
    }

    # Defines JDBC database connections used by the system. Use Database.get("name") to obtain a connection
    # defined here.
    database {
        # Basic sample configuration to illustrate all properties
        # sample {
        #    driver = "my.jdbc.driver.Class"
        #    url = "jdbc:mydb://..."
        #    user = ""
        #    password = ""
        #    initialSize = 0
        #    maxActive = 10
        #    maxIdle = 1
        #    validationQuery = ""
        # }

        # Use the mysql profile (defined above) to connect to a MySQL database
        # sample-mysql {
        #    # apply profile
        #    profile = "mysql"
        #
        #    # specify a user
        #    user = "test"
        #
        #    # and a password
        #    password = "test"
        #
        #    # Specify the name of the database to connect to
        #    database = "testdb"
        #
        #    # Specify the host to connect to or leave empty to connect to "localhost"
        #    host = "somehost"
        # }


        # Use the hsqldb profile (defined above) to connect to a local file based HyperSQL database.
        # sample-hsqldb {
        #    # apply profile
        #    profile = "hsqldb"
        # }
    }
}

mixing {
    database = "mixing"
    updateSchema = true
    dialect = "hsqldb"
}