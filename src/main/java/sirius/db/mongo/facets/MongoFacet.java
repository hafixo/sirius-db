/*
 * Made with all the love in the world
 * by scireum in Remshalden, Germany
 *
 * Copyright by scireum GmbH
 * http://www.scireum.de - info@scireum.de
 */

package sirius.db.mongo.facets;

import com.mongodb.DBObject;
import sirius.db.mixing.EntityDescriptor;
import sirius.db.mongo.Doc;

import java.util.List;
import java.util.function.BiConsumer;

/**
 * Describes a facet which can extend the <tt>$facet</tt> section of the aggregation pipeline generated by
 * {@link sirius.db.mongo.Finder#executeFacets(EntityDescriptor, List)}.
 */
public abstract class MongoFacet {

    protected String name;

    /**
     * Creates a new facet with the given name.
     *
     * @param name the name of the facet, which should be unique within a query
     */
    protected MongoFacet(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    /**
     * Emits a BSON object to be placed into the <tt>$facet</tt> stage of the generated pipeline.
     *
     * @param descriptor    the descriptor of the entity to be queried - can be used to perform field renamings
     * @param facetConsumer the consumer which adds the generated facets to the $facet stage
     */
    public abstract void emitFacets(EntityDescriptor descriptor, BiConsumer<String, DBObject> facetConsumer);

    /**
     * Digests the facet result provided by the database.
     */
    public abstract void digest(Doc result);
}
